//
// Author: Brian W. Mulligan
// Version: 1.0
// License: GPL v3.0
// Name: Longitude & Zone Time
// Description: A demonstration of how the Sun moves across the sky over the course of a day. Uses April 15 to reduce the equation of time to about 0.
//

include("i18n.inc");
include("save_state.inc");
include("basicDisplay.inc");
include("addLeadingZero.inc");



function do_time(display, year,month,day,timeRelNoon)
{
	var hour = timeRelNoon + 18;
	var fullDate = year + "-" + addLeadingZero(month) + "-" + addLeadingZero(day) + "T";
	fullDate = fullDate + addLeadingZero(hour) + ":00:00";
	//core.output("do_time: " + fullDate);
	core.setDate(fullDate, "utc");
	core.wait(0.25);
	display.display();
	var info = core.getObjectInfo("Sun");
	var az = info.azimuth;
	var alt = info.altitude;
	MarkerMgr.markerHorizon(az, alt, true, "circle", mrkrColor, 10);
	alt = alt - 10;	
	var labelText;
	if (timeRelNoon == 0)
		labelText = "noon";
	else if (timeRelNoon == -12 || timeRelNoon == 12)
		labelText = "midnight";
	else if (timeRelNoon > 0)
		labelText = timeRelNoon + " pm";
	else //if (timeRelNoon < 0)
		labelText = (timeRelNoon + 12) + " am";
	LabelMgr.labelHorizon(labelText, az, alt, true, 20, color);
	core.wait(0.5);
}
//
// move to "home" position, then save state of stellarium
core.goHome();
saveState("pre-time-demo");


var color = "#aa0000";
var mrkrColor = "#ff0000";

// remove GUI, set desired starting position
core.setGuiVisible(false);
core.clear("natural");
//core.setTimezone("UTC-06:00");
core.setTimezone("America/Chicago");
core.setProjectionMode("ProjectionStereographic");
core.setTimeRate(0.0); //pause time
core.wait(0.25);

core.setObserverLocation(-90.0, 30.2666667, 0.0, 0.25, "", "Earth"); // longitude, latitude, altitude, transition time, name, planet 
core.wait(0.25);
core.setDate("2019-04-15T12:00:00", "utc");
// turn on planets, turn off planet labels
SolarSystem.setFlagPlanets(true);
SolarSystem.setFlagLabels(false);
// turn on cardinal points
LandscapeMgr.setFlagCardinalsPoints(true);
core.wait(0.5);
var display =  Object.create(basicDisplay);
display.textTitle = "Time & The Sun";
display.timezone = -6.0;
display.display();
var labelBottom = LabelMgr.labelScreen("Looking southward at 6 am CST",300,750,true,20,"#ffff00",true,5000);
var labelBottom2 = LabelMgr.labelScreen(" ",300,775,true,20,"#ffff00",false,5000);
core.wait(6.0);

LabelMgr.setLabelText(labelBottom,"In this video we will watch how the Sun moves across the sky over the course of a day.");
LabelMgr.setLabelShow(labelBottom,true);
core.wait(5.0);
LabelMgr.setLabelShow(labelBottom,false);
core.wait(1.0);

LabelMgr.setLabelText(labelBottom,"We begin by panning down by 30Â° then zooming out.");
LabelMgr.setLabelShow(labelBottom,true);
core.wait(5.0);

core.selectObjectByName("Sun", false);
StelMovementMgr.setFlagTracking(false);

GridLinesMgr.setFlagAzimuthalGrid(false);
StelMovementMgr.lookSouth(true);
//core.wait(2);
for (panStep = 0; panStep < 128; panStep++)
{
	StelMovementMgr.panView(0,-0.5282529869 / 128.0);
	core.wait(5.0 / 128.0);
}
LabelMgr.setLabelShow(labelBottom,false);
core.wait(1.0);

StelMovementMgr.zoomTo(360, 3);
core.wait(5);

LabelMgr.setLabelText(labelBottom,"We will now advance time by 1 hour at each step and mark where the Sun is each hour.");
LabelMgr.setLabelShow(labelBottom,true);
core.wait(8.0);
LabelMgr.setLabelShow(labelBottom,false);
core.wait(1.0);

for (timeRelNoon = -6; timeRelNoon <= 6; timeRelNoon++)
{
	do_time(display,2019,4,15,timeRelNoon);
	if (timeRelNoon == 0)
	{
		LabelMgr.setLabelText(labelBottom,"The Sun moves east to west, and is highest above the horizon near Noon.");
		LabelMgr.setLabelShow(labelBottom,true);
	}
}
core.wait(3.0);
LabelMgr.setLabelShow(labelBottom,false);
core.wait(1.0);

LabelMgr.setLabelText(labelBottom,"The Sun is never directly overhead from this location.");
LabelMgr.setLabelShow(labelBottom,true);
core.wait(8);
LabelMgr.setLabelShow(labelBottom,false);
core.wait(1.0);

GridLinesMgr.setFlagEquatorGrid (true);
LabelMgr.setLabelText(labelBottom,"When we display an equatorial grid we can see that the Sun's path is part of a circle.");
LabelMgr.setLabelShow(labelBottom,true);
core.wait(8);
LabelMgr.setLabelShow(labelBottom,false);
core.wait(1.0);

LabelMgr.setLabelText(labelBottom,"It takes the Sun 24 hours to complete the circle and return to where it was the previous day.");
LabelMgr.setLabelShow(labelBottom,true);
core.wait(8);
LabelMgr.setLabelShow(labelBottom,false);
core.wait(1.0);

LabelMgr.setLabelText(labelBottom,"24 hours, the time it takes for the Sun to complete a circle, is called a Synodic day or a Solar day.");
LabelMgr.setLabelShow(labelBottom,true);
core.wait(8);
LabelMgr.setLabelShow(labelBottom,false);
core.wait(1.0);


LabelMgr.setLabelText(labelBottom,"If we move north or south from here, the length of a day is not affected, but");
LabelMgr.setLabelText(labelBottom2,"the Sun will appear lower or higher in the sky.");
LabelMgr.setLabelShow(labelBottom,true);
LabelMgr.setLabelShow(labelBottom2,true);
core.wait(8);
LabelMgr.setLabelShow(labelBottom,false);
LabelMgr.setLabelShow(labelBottom2,false);
core.wait(1.0);

LabelMgr.setLabelText(labelBottom,"Let's go back to noon and head north.");
LabelMgr.setLabelShow(labelBottom,true);
core.wait(8);
LabelMgr.setLabelShow(labelBottom,false);
core.wait(1.0);
core.setDate("2019-04-15T18:00:00", "utc");
core.wait(0.25);
display.display();

for (latitudedelta = 0; latitudedelta < 59; latitudedelta += 1.0)
{
	core.setObserverLocation(-90.0, 30.2666667 + latitudedelta, 0.0, 0.25, "", "Earth"); // longitude, latitude, altitude, transition time, name, planet 
//	StelMovementMgr.panView(0,-0.01745329252);
	core.wait(0.25);
	display.display();
	if (latitudedelta >= 10 && latitudedelta < 10.25)
	{
		LabelMgr.setLabelText(labelBottom,"Notice that the Sun is getting lower in the sky as we head further north.");
		LabelMgr.setLabelShow(labelBottom,true);
	}
	if (latitudedelta >= 30 && latitudedelta < 30.25)
	{
		LabelMgr.setLabelShow(labelBottom,false);
	}
}
LabelMgr.setLabelText(labelBottom,"We're now nearly at the north pole. Let's watch what the Sun does over the course of a day.");
LabelMgr.setLabelShow(labelBottom,true);
core.wait(8);
LabelMgr.setLabelShow(labelBottom,false);
core.wait(1);
core.setTimeRate(3600.0); //pause time
var startTime = core.getMJDay();
var bQuit = false;
var bDisplay = false;
while (!bQuit)
{
	var currTime = core.getMJDay();
	var ElapsedHours = (currTime - startTime) * 24.0;
	display.display();
	if (!bDisplay && ElapsedHours > 9.0 &&  ElapsedHours < 10.0)
	{
		LabelMgr.setLabelText(labelBottom,"The Sun is currently behind us (to the north).");
		LabelMgr.setLabelShow(labelBottom,true);
		bDisplay = true;
	}
	if (bDisplay && ElapsedHours > 15.0 &&  ElapsedHours < 16.0)
	{
		bDisplay = false;
		LabelMgr.setLabelShow(labelBottom,false);
	}
	if (!bDisplay && ElapsedHours > 23.0 &&  ElapsedHours < 24.0)
	{
		LabelMgr.setLabelText(labelBottom,"The Sun again went in a circle, but the circle is nearly parallel with the horizon.");
		LabelMgr.setLabelShow(labelBottom,true);
		bDisplay = true;
	}
	if (bDisplay && ElapsedHours > 32.0 &&  ElapsedHours < 33.0)
	{
		bDisplay = false;
		LabelMgr.setLabelShow(labelBottom,false);
	}
	if (!bDisplay && ElapsedHours > 35.0 &&  ElapsedHours < 36.0)
	{
		LabelMgr.setLabelText(labelBottom,"It remained daylight the entire 24 hours.");
		LabelMgr.setLabelShow(labelBottom,true);
		bDisplay = true;
	}
	if (bDisplay && ElapsedHours > 44.0 &&  ElapsedHours < 45.0)
	{
		bDisplay = false;
		LabelMgr.setLabelShow(labelBottom,false);
	}

	bQuit = ElapsedHours > 46.0;
	core.wait(0.0333);
}

core.setTimeRate(0.0); //pause time
LabelMgr.setLabelText(labelBottom,"In the next video you will see how moving west or east (your longitude) affects the position of the Sun.");
LabelMgr.setLabelShow(labelBottom,true);
core.wait(8.0);
LabelMgr.setLabelShow(labelBottom,false);
core.wait(1.0);



LabelMgr.labelScreen("Video and script by Dr. Brian W. Mulligan, using Stellarium 0.19.2.",50,850,true,14,"#ffff00",true,8000);
core.wait(10.0);



SolarSystem.setFlagPlanets(false);
SolarSystem.setFlagLabels(false);
StarMgr.setFlagStars(false);
//core.wait(60);
LabelMgr.deleteAllLabels();
MarkerMgr.deleteAllMarkers();
//StarMgr.setFlagStars(starsOn);
//SolarSystem.setFlagPlanets(planetsOn);
//SolarSystem.setFlagLabels(labelsOn);
//LandscapeMgr.setFlagCardinalsPoints(cardinalLabelsOn);
//core.setObserverLocation(observerLocation);
//core.setProjectionMode(projectionMode);
core.clear("natural");
restoreState("pre-time-demo");
//core.setJDay(JD);
core.goHome();
core.setGuiVisible(true);

