//
// Author: Brian W. Mulligan
// Version: 1.0
// License: GPL v3.0
// Name: Proper motion of stars
// Description: A demonstration of how a star (Denebola) moves across the sky over the course of many years, demonstrating proper motion.
//

include("i18n.inc");
include("save_state.inc");
include("basicDisplay.inc");
include("addLeadingZero.inc");

//
// move to "home" position, then save state of stellarium
core.goHome();
saveState("video-11-demo");
core.setTimezone("UTC-06:00");
core.setTimeRate(0); // pause time

var color = "#aa0000";
var mrkrColor = "#ff0000";

// remove GUI, set desired starting position
core.setGuiVisible(false);
MarkerMgr.deleteAllMarkers();
core.clear("natural");
core.setProjectionMode("ProjectionCylinder");
core.setObserverLocation(-97.7431, 30.2666667, 200, 0.25, "", "Earth"); // longitude, latitude, altitude, transition time, name, planet 
core.setDate("2019-03-20T22:00:00", "utc");
// turn on planets, turn off planet labels
SolarSystem.setFlagPlanets(true);
SolarSystem.setFlagLabels(true);
// turn on cardinal points
LandscapeMgr.setFlagCardinalsPoints(false);
core.wait(0.5);

var display =  Object.create(basicDisplay);
display.textTitle = "Time & The Night Sky: Planets";
display.display();
StelMovementMgr.setFlagTracking(false);
GridLinesMgr.setFlagAzimuthalGrid(false);
GridLinesMgr.setFlagEquatorGrid (false);
var labelBottom = LabelMgr.labelScreen("Looking southward in Austin, TX at 10 pm CST",200,800,true,20,"#ffff00",true,5000);
StelMovementMgr.lookSouth(true);
StelMovementMgr.zoomTo(360, 3);
core.wait(5);
LabelMgr.setLabelText(labelBottom,"We will turn off the atmosphere and the ground so we can see the whole sky at once.");
LabelMgr.setLabelShow(labelBottom,true);
core.wait(1);
LandscapeMgr.setFlagAtmosphere(false);
LandscapeMgr.setFlagLandscape(false);
core.wait(4);
LabelMgr.setLabelShow(labelBottom,false);
core.wait(1.0);

core.selectObjectByName("Sun", true);
StelMovementMgr.setFlagTracking(true);
StelMovementMgr.setEquatorialMount(true);
StelMovementMgr.setFlagLockEquPos(true);
//LabelMgr.setLabelText(labelBottom,"We focus on just the Sun. Watch how the planets move around the sky.");
//LabelMgr.setLabelShow(labelBottom,true);
core.wait(3.0);
StelMovementMgr.setFlagTracking(false);

var info = core.getObjectInfo("Sun");
var az = info.azimuth;
var alt = info.altitude;

//core.wait(5.0);
//StelMovementMgr.setFlagTracking(false);
//LabelMgr.setLabelShow(labelBottom,false);
core.wait(1.0);

core.setTimeRate(2419200.0); //speed up time
for (time = 0; time < 445; time++)
{
	display.display();
	if (time == 0)
		LabelMgr.setLabelShow(labelBottom,false);
	core.wait(0.25);
	switch (time)
	{
	case 20:
		LabelMgr.setLabelText(labelBottom,"The planets, Sun, and Moon move relative to the background stars. The word planet means \"wanderer\".");
		LabelMgr.setLabelShow(labelBottom,true);
		break;
	case 40:
		LabelMgr.setLabelShow(labelBottom,false);
		break;
	case 50:
		LabelMgr.setLabelText(labelBottom,"The planets, Sun, and Moon all travel along one path in the sky.");
		LabelMgr.setLabelShow(labelBottom,true);
		break;
	case 70:
		LabelMgr.setLabelShow(labelBottom,false);
		break;
	case 80:
		LabelMgr.setLabelText(labelBottom,"This path is called the ecliptic. The ecliptic is a result of all of the planets orbiting in the same plane.");
		LabelMgr.setLabelShow(labelBottom,true);
		break;
	case 100:
		LabelMgr.setLabelShow(labelBottom,false);
		break;
	case 110:
		LabelMgr.setLabelText(labelBottom,"Planets usually move west-to-east (right-to-left). On occasion they will instead move east-to-west. This is retrograde motion.");
		LabelMgr.setLabelShow(labelBottom,true);
		break;
	case 130:
		LabelMgr.setLabelShow(labelBottom,false);
		break;
	case 150:
		LabelMgr.setLabelText(labelBottom,"Also notice that the planets don't all move at the same rate, and have different angular distance from the Sun.");
		LabelMgr.setLabelShow(labelBottom,true);
		break;
	case 170:
		LabelMgr.setLabelShow(labelBottom,false);
		break;
	case 180:
		LabelMgr.setLabelText(labelBottom,"Venus and Mercury always stay near the Sun. Mercury moves fastest.");
		LabelMgr.setLabelShow(labelBottom,true);
		break;
	case 220:
		LabelMgr.setLabelShow(labelBottom,false);
		break;
	case 230:
		LabelMgr.setLabelText(labelBottom,"The other planets can be anywhere along the ecliptic and don't stay near the Sun.");
		LabelMgr.setLabelShow(labelBottom,true);
		break;
	case 290:
		LabelMgr.setLabelShow(labelBottom,false);
		break;
	case 300:
		LabelMgr.setLabelText(labelBottom,"Mars, Jupiter, Saturn, Uranus are called outer planets.");
		LabelMgr.setLabelShow(labelBottom,true);
		break;
	case 320:
		LabelMgr.setLabelShow(labelBottom,false);
		break;
	case 330:
		LabelMgr.setLabelText(labelBottom,"Of these, Mars moves fastest and Uranus slowest.");
		LabelMgr.setLabelShow(labelBottom,true);
		break;
	case 350:
		LabelMgr.setLabelShow(labelBottom,false);
		break;
	case 360:
		LabelMgr.setLabelText(labelBottom,"The differences in speed are a result of the positions relative to the Sun.");
		LabelMgr.setLabelShow(labelBottom,true);
		break;
	case 380:
		LabelMgr.setLabelShow(labelBottom,false);
		break;
	case 390:
		LabelMgr.setLabelText(labelBottom,"Planets closer to the Sun move faster than planets further from the Sun.");
		LabelMgr.setLabelShow(labelBottom,true);
		break;
	case 410:
		LabelMgr.setLabelShow(labelBottom,false);
		break;
	case 420:
		LabelMgr.setLabelText(labelBottom,"This is due to the force of gravity from the Sun.");
		LabelMgr.setLabelShow(labelBottom,true);
		break;
	case 440:
		LabelMgr.setLabelShow(labelBottom,false);
		break;
	}

}
core.setTimeRate(0.0); //speed up time
core.wait(1.0);
LabelMgr.labelScreen("Video and script by Dr. Brian W. Mulligan, using Stellarium 0.19.1.",50,850,true,14,"#ffff00",true,8000);
core.wait(10.0);


MarkerMgr.deleteAllMarkers();

SolarSystem.setFlagPlanets(false);
SolarSystem.setFlagLabels(false);
StarMgr.setFlagStars(false);
//core.wait(60);
LabelMgr.deleteAllLabels();
MarkerMgr.deleteAllMarkers();
//StarMgr.setFlagStars(starsOn);
//SolarSystem.setFlagPlanets(planetsOn);
//SolarSystem.setFlagLabels(labelsOn);
//LandscapeMgr.setFlagCardinalsPoints(cardinalLabelsOn);
//core.setObserverLocation(observerLocation);
//core.setProjectionMode(projectionMode);
core.clear("natural");
restoreState("video-11-demo");
//core.setJDay(JD);
core.setTimeRate(1.0); // pause time
core.goHome();
core.setGuiVisible(true);

